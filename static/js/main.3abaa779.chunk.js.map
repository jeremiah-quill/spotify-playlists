{"version":3,"sources":["ErrorBoundary.js","Helpers.js","Navbar.js","Playlist.js","Loader.js","PlaylistBar.js","PlaylistSlider.js","NewPlaylistForm.js","MixingBoard.js","ErrorMessage.js","App.js","serviceWorker.js","index.js","spotify-icon-logo.png"],"names":["ErrorBoundary","props","state","isError","error","errorInfo","console","log","this","className","children","Component","getCurrentUser","token","a","axios","get","headers","Authorization","res","getPlaylists","url","extractPlaylists","playlistsData","playlists","i","items","length","id","getAllTracks","allTracks","newPlaylist","name","tracks","push","URL","keepGoing","newURL","getTracks","data","track","artists","map","artist","next","curatePlaylist","playlist","workingPlaylist","curatedPlaylistNewTotal","Math","floor","level","randomIndex","random","splice","formatURIs","trackID","addTracks","playlistID","post","uris","addAllTracks","tracksLeftToSend","startIndex","endIndex","nextSetOfTracks","slice","shuffle","array","temporaryValue","currentIndex","Navbar","isDropdown","handleClick","bind","username","onClick","Playlist","isLocked","removePlaylist","addPlaylist","Loader","PlaylistBar","findMorePlaylists","chosenPlaylistIDs","isMorePlaylists","isLoading","isButton","src","SpotifyIconLogo","alt","key","indexOf","PlaylistSlider","isChanging","handleChange","handleChangeCommitted","e","value","onLevelChange","setState","classes","totalTrackCount","halfTrackCount","root","Slider","orientation","onChangeCommitted","onChange","defaultValue","withStyles","height","NewPlaylistForm","open","modalOpen","isInvalidName","closeSnackbar","handleModalOpen","handleModalClose","createPlaylist","preventDefault","setTimeout","target","newPlaylistTrackCount","Modal","aria-labelledby","aria-describedby","modal","onClose","handleClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paper","htmlFor","type","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","contentprops","action","IconButton","display","alignItems","justifyContent","border","MixingBoard","getNewTrackCount","chosenPlaylists","reduce","acc","currVal","ErrorMessage","App","access_token","getHashParams","isAuthenticated","userData","isLoadingPlaylists","isLoadingNewPlaylist","authorizeURL","clientID","redirectURI","scope","window","location","href","userResponse","response","status","playlistsResponse","maxPlaylists","currSt","filter","newLevel","updatedPlaylists","playlistName","curatedPlaylist","hashParams","r","q","hash","substring","exec","decodeURIComponent","accessToken","defaultProps","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.3abaa779.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isError: false };\n\t}\n\tcomponentDidCatch(error, errorInfo) {\n\t\tconsole.log(`ERROR: ${error}, ERRORINFO: ${errorInfo}`);\n\t\t// You can also log the error to an error reporting service\n\t\t// logErrorToMyService(error, errorInfo);\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { isError: true };\n\t}\n\trender() {\n\t\tif (this.state.isError) {\n\t\t\treturn <div className=\"ErrorBoundary\">Sorry, an error occured!</div>;\n\t\t}\n\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;\n","import axios from 'axios';\n\nasync function getCurrentUser(token) {\n\ttry {\n\t\tlet res = await axios.get(`https://api.spotify.com/v1/me`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t} catch (err) {\n\t\treturn err;\n\t}\n}\n\nasync function getPlaylists(url, token) {\n\ttry {\n\t\tconst res = await axios.get(url, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t} catch (err) {\n\t\treturn err;\n\t}\n}\n\nasync function extractPlaylists(playlistsData, token) {\n\tlet playlists = [];\n\tfor (let i = 0; i < playlistsData.items.length; i++) {\n\t\tlet url = `https://api.spotify.com/v1/playlists/${playlistsData.items[i].id}/tracks`;\n\t\tconst allTracks = await getAllTracks(url, token);\n\t\tconst newPlaylist = {\n\t\t\tname: playlistsData.items[i].name,\n\t\t\tid: playlistsData.items[i].id,\n\t\t\ttracks: allTracks\n\t\t};\n\t\tplaylists.push(newPlaylist);\n\t}\n\treturn playlists;\n}\n\nasync function getAllTracks(URL, token) {\n\tlet allTracks = [];\n\tlet keepGoing = true;\n\tlet newURL = URL;\n\twhile (keepGoing) {\n\t\tlet res = await getTracks(newURL, token);\n\t\tif (!res.data) {\n\t\t\treturn;\n\t\t} else {\n\t\t\tfor (let i = 0; i < res.data.items.length; i++) {\n\t\t\t\tlet track = {\n\t\t\t\t\tname: res.data.items[i].track.name,\n\t\t\t\t\tid: res.data.items[i].track.id,\n\t\t\t\t\tartists: res.data.items[i].track.artists.map((artist) => ({\n\t\t\t\t\t\tname: artist.name,\n\t\t\t\t\t\tid: artist.id\n\t\t\t\t\t}))\n\t\t\t\t};\n\t\t\t\tallTracks.push(track);\n\t\t\t}\n\t\t\tnewURL = res.data.next;\n\t\t\tif (!newURL) {\n\t\t\t\tkeepGoing = false;\n\t\t\t\treturn allTracks;\n\t\t\t}\n\t\t}\n\t}\n}\n\nasync function getTracks(URL, token) {\n\ttry {\n\t\tconst res = await axios.get(`${URL}`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\t\treturn res;\n\t} catch (err) {\n\t\treturn err;\n\t}\n}\n\n// Take a playlist and randomly curate it based on # tracks chosen\nfunction curatePlaylist(playlist) {\n\tconst workingPlaylist = { ...playlist, tracks: [ ...playlist.tracks ] };\n\tlet curatedPlaylistNewTotal = Math.floor(workingPlaylist.level / 100 * workingPlaylist.tracks.length);\n\tconst newPlaylist = [];\n\tfor (let i = 0; i < curatedPlaylistNewTotal; i++) {\n\t\tlet randomIndex = Math.floor(Math.random() * workingPlaylist.tracks.length);\n\t\tnewPlaylist.push(workingPlaylist.tracks[randomIndex]);\n\t\tworkingPlaylist.tracks.splice(randomIndex, 1);\n\t}\n\treturn newPlaylist;\n}\n\n// Format the track ID to be used in formatURIs\nfunction formatTrackID(trackID) {\n\treturn `spotify:track:${trackID}`;\n}\n\n// Format URIs for createPlaylist API call\nfunction formatURIs(playlist) {\n\tconst formattedURI = playlist.map((track) => formatTrackID(track.id));\n\treturn formattedURI;\n}\n\nasync function addTracks(tracks, playlistID, token) {\n\tawait axios.post(\n\t\t`https://api.spotify.com/v1/playlists/${playlistID}/tracks`,\n\t\t{ uris: formatURIs(tracks) },\n\t\t{ headers: { Authorization: 'Bearer ' + token } }\n\t);\n}\n\nasync function addAllTracks(playlist, playlistID, token) {\n\tlet tracksLeftToSend = playlist.length;\n\tlet startIndex = 0;\n\tlet endIndex = tracksLeftToSend > 100 ? 100 : tracksLeftToSend;\n\tlet nextSetOfTracks = playlist.slice(startIndex, endIndex);\n\twhile (tracksLeftToSend) {\n\t\t// send nextSetOfTracks to playlistID\n\t\tawait addTracks(nextSetOfTracks, playlistID, token);\n\t\t// update tracksLeftToSend to see how many are left\n\t\ttracksLeftToSend = tracksLeftToSend - nextSetOfTracks.length;\n\t\t// update start index\n\t\tstartIndex = startIndex + nextSetOfTracks.length;\n\t\t// update end index\n\t\tendIndex = tracksLeftToSend > 100 ? endIndex + 100 : endIndex + tracksLeftToSend;\n\t\t// create nextSetOfTracks\n\t\tnextSetOfTracks = playlist.slice(startIndex, endIndex);\n\t}\n}\n\n// Shuffle function taken from stackoverflow\nfunction shuffle(array) {\n\tvar currentIndex = array.length,\n\t\ttemporaryValue,\n\t\trandomIndex;\n\t// While there remain elements to shuffle...\n\twhile (0 !== currentIndex) {\n\t\t// Pick a remaining element...\n\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\tcurrentIndex -= 1;\n\t\t// And swap it with the current element.\n\t\ttemporaryValue = array[currentIndex];\n\t\tarray[currentIndex] = array[randomIndex];\n\t\tarray[randomIndex] = temporaryValue;\n\t}\n\treturn array;\n}\n\nexport { getCurrentUser, getPlaylists, extractPlaylists, curatePlaylist, addAllTracks, shuffle };\n","import React, { Component } from 'react';\n// import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n// import ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport './Navbar.css';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isDropdown: false };\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick() {\n\t\t// this.setState((currSt) => ({ isDropdown: !currSt.isDropdown }));\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Navbar\">\n\t\t\t\t{this.props.username && (\n\t\t\t\t\t<div onClick={this.handleClick} className=\"account-widget\">\n\t\t\t\t\t\t<PersonIcon className=\"userIcon\" />\n\t\t\t\t\t\t<span>{this.props.username}</span>\n\t\t\t\t\t\t{/* {this.state.isDropdown ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n\t\t\t\t\t\t{this.state.isDropdown && (\n\t\t\t\t\t\t\t<div className=\"dropdown-menu\">\n\t\t\t\t\t\t\t\t<div className=\"dropdown-item\">dropdown item</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)} */}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport './Playlist.css';\n\nclass Playlist extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick() {\n\t\tif (!this.props.isLocked) {\n\t\t\tthis.props.addPlaylist(this.props.playlist);\n\t\t} else {\n\t\t\tthis.props.removePlaylist(this.props.playlist.id);\n\t\t}\n\t}\n\trender() {\n\t\tconst { isLocked, playlist } = this.props;\n\t\treturn (\n\t\t\t<div className={`Playlist ${isLocked && 'disabled'}`} onClick={this.handleClick}>\n\t\t\t\t<div className=\"Playlist-name\">{playlist.name}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Playlist;\n","import React from 'react';\nimport './Loader.css';\n\nfunction Loader(props) {\n\treturn (\n\t\t<div className=\"kabobloader\">\n\t\t\t<div className=\"bounce1\" />\n\t\t\t<div className=\"bounce2\" />\n\t\t\t<div className=\"bounce3\" />\n\t\t</div>\n\t);\n}\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport Playlist from './Playlist';\nimport Loader from './Loader';\nimport SpotifyIconLogo from './spotify-icon-logo.png';\nimport './PlaylistBar.css';\n\nclass PlaylistBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick() {\n\t\tthis.props.findMorePlaylists();\n\t}\n\trender() {\n\t\tconst { playlists, addPlaylist, removePlaylist, chosenPlaylistIDs, isMorePlaylists, isLoading } = this.props;\n\t\tconst isButton = isMorePlaylists && playlists.length > 0;\n\n\t\treturn (\n\t\t\t<div className=\"PlaylistBar-container\">\n\t\t\t\t<div className=\"sidebar-branding\">\n\t\t\t\t\t<img src={SpotifyIconLogo} alt=\"spotify-logo\" className=\"logo\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"PlaylistBar\">\n\t\t\t\t\t{isLoading ? (\n\t\t\t\t\t\t<Loader />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"playlists-container\">\n\t\t\t\t\t\t\t{playlists.map((playlist) => (\n\t\t\t\t\t\t\t\t<Playlist\n\t\t\t\t\t\t\t\t\taddPlaylist={addPlaylist}\n\t\t\t\t\t\t\t\t\tremovePlaylist={removePlaylist}\n\t\t\t\t\t\t\t\t\tkey={playlist.id}\n\t\t\t\t\t\t\t\t\tisLocked={chosenPlaylistIDs.indexOf(playlist.id) !== -1}\n\t\t\t\t\t\t\t\t\tplaylist={playlist}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{isButton && (\n\t\t\t\t\t\t\t\t<div className=\"more-playlist-button-container\">\n\t\t\t\t\t\t\t\t\t<div onClick={this.handleClick} className=\"more-playlist-button\">\n\t\t\t\t\t\t\t\t\t\tMore Playlists\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PlaylistBar;\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '@material-ui/icons/Close';\nimport './PlaylistSlider.css';\n\nconst styles = {\n\troot: {\n\t\theight: '300px'\n\t}\n};\n\nclass PlaylistSlider extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isChanging: false };\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleChangeCommitted = this.handleChangeCommitted.bind(this);\n\t}\n\thandleClick() {\n\t\tthis.props.removePlaylist(this.props.playlist.id);\n\t}\n\thandleChange(e, value) {\n\t\tthis.props.onLevelChange(this.props.playlist.id, value);\n\t\tthis.setState({ isChanging: true });\n\t}\n\thandleChangeCommitted() {\n\t\tthis.setState({ isChanging: false });\n\t}\n\trender() {\n\t\tconst { classes, playlist } = this.props;\n\t\tconst totalTrackCount = playlist.tracks.length;\n\t\tconst halfTrackCount = Math.floor(playlist.level / 100 * playlist.tracks.length);\n\n\t\treturn (\n\t\t\t<div className=\"PlaylistSlider\">\n\t\t\t\t<CloseIcon className=\"PlaylistSlider-remove-button\" onClick={this.handleClick} />\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tclassName=\"slider\"\n\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\tonChangeCommitted={this.handleChangeCommitted}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tdefaultValue={50}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"track-count-container\">\n\t\t\t\t\t<span className={`${this.state.isChanging && 'isChanging'}`}>{halfTrackCount}</span>\n\n\t\t\t\t\t<span className=\"track-count\">{`/ ${totalTrackCount}`}</span>\n\t\t\t\t</div>\n\t\t\t\t<h3 className=\"playlist-name\">{playlist.name}</h3>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(PlaylistSlider);\n","import React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport './NewPlaylistForm.css';\n\nconst styles = {\n\tmodal: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center'\n\t},\n\tpaper: {\n\t\t// backgroundColor: theme.palette.background.paper,\n\t\tborder: '2px solid #000'\n\t\t// boxShadow: theme.shadows[5],\n\t\t// padding: theme.spacing(2, 4, 3)\n\t}\n};\n\nclass NewPlaylistForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { name: '', open: false, modalOpen: false, isInvalidName: false };\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.closeSnackbar = this.closeSnackbar.bind(this);\n\t\tthis.handleModalOpen = this.handleModalOpen.bind(this);\n\t\tthis.handleModalClose = this.handleModalClose.bind(this);\n\t}\n\thandleModalOpen() {\n\t\tthis.setState({ modalOpen: true });\n\t}\n\thandleModalClose() {\n\t\tthis.setState({ modalOpen: false });\n\t}\n\n\tcloseSnackbar() {\n\t\tthis.setState({ open: false });\n\t}\n\thandleClick(e) {\n\t\tif (!this.state.name) {\n\t\t\tthis.setState({ isInvalidName: true });\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setState({ isInvalidName: false });\n\t\t\t}, 3000);\n\t\t} else {\n\t\t\tthis.props.createPlaylist(this.state.name);\n\t\t\tthis.setState({ name: '', open: true, modalOpen: false });\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\thandleChange(e) {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t}\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst isInvalidName = this.state.isInvalidName;\n\n\t\treturn (\n\t\t\t<div className=\"NewPlaylistForm\">\n\t\t\t\t<div className=\"NewPlaylistForm-form\">\n\t\t\t\t\t<button onClick={this.handleModalOpen} className=\"create-playlist-button\">\n\t\t\t\t\t\t{`Create Playlist (${this.props.newPlaylistTrackCount} songs)`}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<Modal\n\t\t\t\t\t\taria-labelledby=\"transition-modal-title\"\n\t\t\t\t\t\taria-describedby=\"transition-modal-description\"\n\t\t\t\t\t\tclassName={classes.modal}\n\t\t\t\t\t\topen={this.state.modalOpen}\n\t\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\t\tcloseAfterTransition\n\t\t\t\t\t\tBackdropComponent={Backdrop}\n\t\t\t\t\t\tBackdropProps={{\n\t\t\t\t\t\t\ttimeout: 500\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Fade in={this.state.modalOpen}>\n\t\t\t\t\t\t\t<div className={`${classes.paper} modal-content`}>\n\t\t\t\t\t\t\t\t<CloseIcon className=\"close-icon\" onClick={this.handleModalClose} />\n\t\t\t\t\t\t\t\t<h3>Create Playlist</h3>\n\t\t\t\t\t\t\t\t<div className=\"input-container\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclassName={`name-input ${isInvalidName && `red-outline`}`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className={`invalid-name-text ${isInvalidName && `show-invalid`}`}>\n\t\t\t\t\t\t\t\t\t\tPlease name your playlist\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<button className=\"create-playlist-button\" onClick={this.handleClick}>\n\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Fade>\n\t\t\t\t\t</Modal>\n\t\t\t\t</div>\n\t\t\t\t<Snackbar\n\t\t\t\t\tanchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n\t\t\t\t\topen={this.state.open}\n\t\t\t\t\tautoHideDuration={3000}\n\t\t\t\t\tmessage={<span id=\"message-id\">Playlist added</span>}\n\t\t\t\t\tcontentprops={{ 'aria-describedby': 'message-id' }}\n\t\t\t\t\tonClose={this.closeSnackbar}\n\t\t\t\t\taction={[\n\t\t\t\t\t\t<IconButton onClick={this.closeSnackbar}>\n\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(NewPlaylistForm);\n","import React, { Component } from 'react';\nimport PlaylistSlider from './PlaylistSlider';\nimport NewPlaylistForm from './NewPlaylistForm';\nimport './MixingBoard.css';\n\nclass MixingBoard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.getNewTrackCount = this.getNewTrackCount.bind(this);\n\t}\n\tgetNewTrackCount() {\n\t\tif (this.props.chosenPlaylists.length) {\n\t\t\tconst allTrackTotals = this.props.chosenPlaylists.map((playlist) =>\n\t\t\t\tMath.floor(playlist.level / 100 * playlist.tracks.length)\n\t\t\t);\n\t\t\tconst sum = allTrackTotals.reduce((acc, currVal) => acc + currVal);\n\t\t\treturn sum;\n\t\t}\n\t}\n\trender() {\n\t\tconst { chosenPlaylists, removePlaylist, onLevelChange, createPlaylist } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"MixingBoard\">\n\t\t\t\t<div className=\"MixingBoard-container\">\n\t\t\t\t\t{chosenPlaylists.length > 0 ? (\n\t\t\t\t\t\t<div className=\"MixingBoard-playlists\">\n\t\t\t\t\t\t\t{chosenPlaylists.map((playlist) => (\n\t\t\t\t\t\t\t\t<PlaylistSlider\n\t\t\t\t\t\t\t\t\tremovePlaylist={removePlaylist}\n\t\t\t\t\t\t\t\t\tonLevelChange={onLevelChange}\n\t\t\t\t\t\t\t\t\tplaylist={playlist}\n\t\t\t\t\t\t\t\t\tkey={playlist.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"instructions-banner\">Add playlists to begin</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{chosenPlaylists.length > 0 && (\n\t\t\t\t\t<NewPlaylistForm newPlaylistTrackCount={this.getNewTrackCount()} createPlaylist={createPlaylist} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MixingBoard;\n","import React from 'react';\nimport './ErrorMessage.css';\n\nfunction ErrorMessage(props) {\n\treturn (\n\t\t<div className=\"ErrorMessage\">\n\t\t\t<div>{props.message}</div>\n\t\t</div>\n\t);\n}\n\nexport default ErrorMessage;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { getCurrentUser, getPlaylists, extractPlaylists, curatePlaylist, shuffle, addAllTracks } from './Helpers.js';\nimport Navbar from './Navbar';\nimport PlaylistBar from './PlaylistBar';\nimport MixingBoard from './MixingBoard';\nimport Loader from './Loader';\nimport ErrorMessage from './ErrorMessage';\nimport './App.css';\n\nclass App extends Component {\n\tstatic defaultProps = {\n\t\tclientID: '9a9bc27e766d4e48bcd18dad29e5a877',\n\t\t// redirectURI: 'http://localhost:3000',\n\t\tredirectURI: 'https://jeremiah-quill.github.io/spotify-playlists',\n\t\tscope: 'user-read-private playlist-read-private playlist-modify-public playlist-modify-private',\n\t\tmaxPlaylists: 4\n\t};\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taccess_token: this.getHashParams().access_token,\n\t\t\tisAuthenticated: false,\n\t\t\tuserData: {},\n\t\t\tplaylists: [],\n\t\t\tisLoadingPlaylists: true,\n\t\t\tisLoadingNewPlaylist: false,\n\t\t\tchosenPlaylists: [],\n\t\t\tisMorePlaylists: '',\n\t\t\tisError: ''\n\t\t};\n\t\tthis.getHashParams = this.getHashParams.bind(this);\n\t\tthis.addPlaylist = this.addPlaylist.bind(this);\n\t\tthis.removePlaylist = this.removePlaylist.bind(this);\n\t\tthis.createPlaylist = this.createPlaylist.bind(this);\n\t\tthis.onLevelChange = this.onLevelChange.bind(this);\n\t\tthis.findMorePlaylists = this.findMorePlaylists.bind(this);\n\t}\n\n\tasync componentDidMount() {\n\t\tconst authorizeURL = `https://accounts.spotify.com/authorize?client_id=${this.props\n\t\t\t.clientID}&redirect_uri=${this.props.redirectURI}&scope=${this.props\n\t\t\t.scope}&show_dialog=true&response_type=token`;\n\t\tif (!this.state.access_token) {\n\t\t\twindow.location.href = authorizeURL;\n\t\t}\n\n\t\t// get user data\n\t\tlet userResponse = await getCurrentUser(this.state.access_token);\n\t\tif (!userResponse.data) {\n\t\t\tthis.setState({\n\t\t\t\tisError: `Error: ${userResponse.response.status}`\n\t\t\t});\n\t\t} else {\n\t\t\t// get playlists data\n\t\t\tlet playlistsResponse = await getPlaylists(\n\t\t\t\t`https://api.spotify.com/v1/users/${userResponse.data.id}/playlists/?limit=20`,\n\t\t\t\tthis.state.access_token\n\t\t\t);\n\t\t\tif (!playlistsResponse.data) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisError: `Error: ${playlistsResponse.response.status}`\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// extract tracks from playlists and build up objects to store in state\n\t\t\t\tconst playlists = await extractPlaylists(playlistsResponse.data, this.state.access_token);\n\t\t\t\tthis.setState({\n\t\t\t\t\tplaylists: playlists,\n\t\t\t\t\tuserData: userResponse.data,\n\t\t\t\t\tisLoadingPlaylists: false,\n\t\t\t\t\tisMorePlaylists: playlistsResponse.data.next\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\taddPlaylist(playlist) {\n\t\tif (this.state.chosenPlaylists.length < this.props.maxPlaylists) {\n\t\t\tconst newPlaylist = { ...playlist, level: 50 };\n\t\t\tthis.setState((currSt) => ({ chosenPlaylists: [ ...currSt.chosenPlaylists, newPlaylist ] }));\n\t\t}\n\t}\n\n\tremovePlaylist(playlistID) {\n\t\tthis.setState((currSt) => ({\n\t\t\tchosenPlaylists: this.state.chosenPlaylists.filter((playlist) => playlist.id !== playlistID)\n\t\t}));\n\t}\n\n\tonLevelChange(id, newLevel) {\n\t\tconst updatedPlaylists = this.state.chosenPlaylists.map((playlist) => {\n\t\t\tif (playlist.id === id) {\n\t\t\t\treturn { ...playlist, level: newLevel };\n\t\t\t}\n\t\t\treturn playlist;\n\t\t});\n\t\tthis.setState({ chosenPlaylists: updatedPlaylists });\n\t}\n\n\tasync createPlaylist(playlistName) {\n\t\tthis.setState({ isLoadingNewPlaylist: true });\n\t\tlet newPlaylist = [];\n\t\tfor (let i = 0; i < this.state.chosenPlaylists.length; i++) {\n\t\t\tlet curatedPlaylist = curatePlaylist(this.state.chosenPlaylists[i]);\n\t\t\tfor (let i = 0; i < curatedPlaylist.length; i++) {\n\t\t\t\tnewPlaylist.push(curatedPlaylist[i]);\n\t\t\t}\n\t\t}\n\t\tshuffle(newPlaylist);\n\t\tconst response = await axios.post(\n\t\t\t`https://api.spotify.com/v1/users/${this.state.userData.id}/playlists`,\n\t\t\t{ name: playlistName },\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'Bearer ' + this.state.access_token\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\t\tconst playlistID = await response.data.id;\n\t\tawait addAllTracks(newPlaylist, playlistID, this.state.access_token);\n\t\tlet playlistsData = await getPlaylists(\n\t\t\t`https://api.spotify.com/v1/users/${this.state.userData.id}/playlists`,\n\t\t\tthis.state.access_token\n\t\t);\n\t\tconst playlists = await extractPlaylists(playlistsData.data, this.state.access_token);\n\t\tthis.setState({ playlists: playlists, isMorePlaylists: playlistsData.data.next, isLoadingNewPlaylist: false });\n\t}\n\n\tasync findMorePlaylists() {\n\t\tthis.setState({ isLoadingNewPlaylist: true });\n\t\tconst playlistsResponse = await getPlaylists(this.state.isMorePlaylists, this.state.access_token);\n\t\tconst playlists = await extractPlaylists(playlistsResponse.data, this.state.access_token);\n\t\tthis.setState((currSt) => ({\n\t\t\tplaylists: [ ...currSt.playlists, ...playlists ],\n\t\t\tisLoadingNewPlaylist: false,\n\t\t\tisMorePlaylists: playlistsResponse.data.next\n\t\t}));\n\t}\n\n\tgetHashParams() {\n\t\tvar hashParams = {};\n\t\tvar e,\n\t\t\tr = /([^&;=]+)=?([^&;]*)/g,\n\t\t\tq = window.location.hash.substring(1);\n\t\twhile ((e = r.exec(q))) {\n\t\t\thashParams[e[1]] = decodeURIComponent(e[2]);\n\t\t}\n\t\treturn hashParams;\n\t}\n\n\trender() {\n\t\tconst authorizeURL = `https://accounts.spotify.com/authorize?client_id=${this.props\n\t\t\t.clientID}&redirect_uri=${this.props.redirectURI}&scope=${this.props\n\t\t\t.scope}&show_dialog=true&response_type=token`;\n\t\tconst {\n\t\t\taccess_token,\n\t\t\tchosenPlaylists,\n\t\t\tisLoadingPlaylists,\n\t\t\tisLoadingNewPlaylist,\n\t\t\tplaylists,\n\t\t\tisMorePlaylists,\n\t\t\tisError\n\t\t} = this.state;\n\t\treturn isError ? (\n\t\t\t<ErrorMessage message={isError} />\n\t\t) : isLoadingPlaylists ? (\n\t\t\t<Loader />\n\t\t) : (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navbar authorizeURL={authorizeURL} accessToken={access_token} username={this.state.userData.id} />\n\t\t\t\t<div className=\"App-content-container\">\n\t\t\t\t\t<PlaylistBar\n\t\t\t\t\t\tchosenPlaylistIDs={chosenPlaylists.map((playlist) => playlist.id)}\n\t\t\t\t\t\taddPlaylist={this.addPlaylist}\n\t\t\t\t\t\tremovePlaylist={this.removePlaylist}\n\t\t\t\t\t\tisLoading={isLoadingNewPlaylist}\n\t\t\t\t\t\tplaylists={playlists}\n\t\t\t\t\t\tisMorePlaylists={isMorePlaylists}\n\t\t\t\t\t\tfindMorePlaylists={this.findMorePlaylists}\n\t\t\t\t\t/>\n\t\t\t\t\t<MixingBoard\n\t\t\t\t\t\tchosenPlaylists={chosenPlaylists}\n\t\t\t\t\t\tcreatePlaylist={this.createPlaylist}\n\t\t\t\t\t\tremovePlaylist={this.removePlaylist}\n\t\t\t\t\t\tonLevelChange={this.onLevelChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ErrorBoundary from './ErrorBoundary';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ErrorBoundary>\n\t\t\t<App />\n\t\t</ErrorBoundary>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/spotify-icon-logo.11dc437a.png\";"],"sourceRoot":""}