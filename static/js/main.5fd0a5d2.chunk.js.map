{"version":3,"sources":["ErrorBoundary.js","Navbar.js","Playlist.js","Loader.js","PlaylistBar.js","PlaylistSlider.js","NewPlaylistForm.js","MixingBoard.js","ErrorMessage.js","App.js","serviceWorker.js","index.js","spotify-icon-logo.png"],"names":["ErrorBoundary","props","state","isError","error","errorInfo","console","log","this","className","children","Component","Navbar","isDropdown","handleClick","bind","username","onClick","Playlist","isLocked","removePlaylist","playlist","id","addPlaylist","name","Loader","PlaylistBar","findMorePlaylists","playlists","chosenPlaylistIDs","isMorePlaylists","isLoading","isButton","length","src","SpotifyIconLogo","alt","map","key","indexOf","PlaylistSlider","isChanging","handleChange","handleChangeCommitted","e","value","onLevelChange","setState","classes","totalTrackCount","tracks","halfTrackCount","Math","floor","level","root","Slider","orientation","onChangeCommitted","onChange","defaultValue","withStyles","height","NewPlaylistForm","open","modalOpen","isInvalidName","closeSnackbar","handleModalOpen","handleModalClose","createPlaylist","preventDefault","setTimeout","target","newPlaylistTrackCount","Modal","aria-labelledby","aria-describedby","modal","onClose","handleClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paper","htmlFor","type","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","contentprops","action","IconButton","display","alignItems","justifyContent","border","MixingBoard","getNewTrackCount","chosenPlaylists","reduce","acc","currVal","ErrorMessage","App","access_token","getHashParams","isAuthenticated","userData","isLoadingPlaylists","isLoadingNewPlaylist","extractPlaylists","getTracks","getAllTracks","getCurrentUser","authorizeURL","clientID","redirectURI","scope","window","location","href","userResponse","data","response","status","getPlaylists","playlistsResponse","next","token","axios","get","headers","Authorization","res","url","playlistsData","i","items","allTracks","newPlaylist","push","URL","keepGoing","newURL","track","artists","artist","maxPlaylists","currSt","playlistID","filter","newLevel","updatedPlaylists","playlistName","curatedPlaylist","curatePlaylist","shuffle","post","addAllTracks","workingPlaylist","curatedPlaylistNewTotal","randomIndex","random","splice","uris","formatURIs","tracksLeftToSend","startIndex","endIndex","nextSetOfTracks","slice","addTracks","formatTrackID","trackID","array","temporaryValue","currentIndex","hashParams","r","q","hash","substring","exec","decodeURIComponent","accessToken","defaultProps","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.5fd0a5d2.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isError: false };\n\t}\n\tcomponentDidCatch(error, errorInfo) {\n\t\tconsole.log(`ERROR: ${error}, ERRORINFO: ${errorInfo}`);\n\t\t// You can also log the error to an error reporting service\n\t\t// logErrorToMyService(error, errorInfo);\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { isError: true };\n\t}\n\trender() {\n\t\tif (this.state.isError) {\n\t\t\treturn <div className=\"ErrorBoundary\">Sorry, an error occured!</div>;\n\t\t}\n\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\n// import ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\n// import ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport './Navbar.css';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isDropdown: false };\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick() {\n\t\t// this.setState((currSt) => ({ isDropdown: !currSt.isDropdown }));\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Navbar\">\n\t\t\t\t{this.props.username && (\n\t\t\t\t\t<div onClick={this.handleClick} className=\"account-widget\">\n\t\t\t\t\t\t<PersonIcon className=\"userIcon\" />\n\t\t\t\t\t\t<span>{this.props.username}</span>\n\t\t\t\t\t\t{/* {this.state.isDropdown ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n\t\t\t\t\t\t{this.state.isDropdown && (\n\t\t\t\t\t\t\t<div className=\"dropdown-menu\">\n\t\t\t\t\t\t\t\t<div className=\"dropdown-item\">dropdown item</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)} */}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport './Playlist.css';\n\nclass Playlist extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick() {\n\t\tif (!this.props.isLocked) {\n\t\t\tthis.props.addPlaylist(this.props.playlist);\n\t\t} else {\n\t\t\tthis.props.removePlaylist(this.props.playlist.id);\n\t\t}\n\t}\n\trender() {\n\t\tconst { isLocked, playlist } = this.props;\n\t\treturn (\n\t\t\t<div className={`Playlist ${isLocked && 'disabled'}`} onClick={this.handleClick}>\n\t\t\t\t<div className=\"Playlist-name\">{playlist.name}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Playlist;\n","import React from 'react';\nimport './Loader.css';\n\nfunction Loader(props) {\n\treturn (\n\t\t<div className=\"kabobloader\">\n\t\t\t<div className=\"bounce1\" />\n\t\t\t<div className=\"bounce2\" />\n\t\t\t<div className=\"bounce3\" />\n\t\t</div>\n\t);\n}\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport Playlist from './Playlist';\nimport Loader from './Loader';\nimport SpotifyIconLogo from './spotify-icon-logo.png';\nimport './PlaylistBar.css';\n\nclass PlaylistBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick() {\n\t\tthis.props.findMorePlaylists();\n\t}\n\trender() {\n\t\tconst { playlists, addPlaylist, removePlaylist, chosenPlaylistIDs, isMorePlaylists, isLoading } = this.props;\n\t\tconst isButton = isMorePlaylists && playlists.length > 0;\n\n\t\treturn (\n\t\t\t<div className=\"PlaylistBar-container\">\n\t\t\t\t<div className=\"sidebar-branding\">\n\t\t\t\t\t<img src={SpotifyIconLogo} alt=\"spotify-logo\" className=\"logo\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"PlaylistBar\">\n\t\t\t\t\t{isLoading ? (\n\t\t\t\t\t\t<Loader />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"playlists-container\">\n\t\t\t\t\t\t\t{playlists.map((playlist) => (\n\t\t\t\t\t\t\t\t<Playlist\n\t\t\t\t\t\t\t\t\taddPlaylist={addPlaylist}\n\t\t\t\t\t\t\t\t\tremovePlaylist={removePlaylist}\n\t\t\t\t\t\t\t\t\tkey={playlist.id}\n\t\t\t\t\t\t\t\t\tisLocked={chosenPlaylistIDs.indexOf(playlist.id) !== -1}\n\t\t\t\t\t\t\t\t\tplaylist={playlist}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{isButton && (\n\t\t\t\t\t\t\t\t<div className=\"more-playlist-button-container\">\n\t\t\t\t\t\t\t\t\t<div onClick={this.handleClick} className=\"more-playlist-button\">\n\t\t\t\t\t\t\t\t\t\tMore Playlists\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PlaylistBar;\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '@material-ui/icons/Close';\nimport './PlaylistSlider.css';\n\nconst styles = {\n\troot: {\n\t\theight: '300px'\n\t}\n};\n\nclass PlaylistSlider extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isChanging: false };\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleChangeCommitted = this.handleChangeCommitted.bind(this);\n\t}\n\thandleClick() {\n\t\tthis.props.removePlaylist(this.props.playlist.id);\n\t}\n\thandleChange(e, value) {\n\t\tthis.props.onLevelChange(this.props.playlist.id, value);\n\t\tthis.setState({ isChanging: true });\n\t}\n\thandleChangeCommitted() {\n\t\tthis.setState({ isChanging: false });\n\t}\n\trender() {\n\t\tconst { classes, playlist } = this.props;\n\t\tconst totalTrackCount = playlist.tracks.length;\n\t\tconst halfTrackCount = Math.floor(playlist.level / 100 * playlist.tracks.length);\n\n\t\treturn (\n\t\t\t<div className=\"PlaylistSlider\">\n\t\t\t\t<CloseIcon className=\"PlaylistSlider-remove-button\" onClick={this.handleClick} />\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tclassName=\"slider\"\n\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\tonChangeCommitted={this.handleChangeCommitted}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tdefaultValue={50}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"track-count-container\">\n\t\t\t\t\t<span className={`${this.state.isChanging && 'isChanging'}`}>{halfTrackCount}</span>\n\n\t\t\t\t\t<span className=\"track-count\">{`/ ${totalTrackCount}`}</span>\n\t\t\t\t</div>\n\t\t\t\t<h3 className=\"playlist-name\">{playlist.name}</h3>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(PlaylistSlider);\n","import React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport './NewPlaylistForm.css';\n\nconst styles = {\n\tmodal: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center'\n\t},\n\tpaper: {\n\t\t// backgroundColor: theme.palette.background.paper,\n\t\tborder: '2px solid #000'\n\t\t// boxShadow: theme.shadows[5],\n\t\t// padding: theme.spacing(2, 4, 3)\n\t}\n};\n\nclass NewPlaylistForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { name: '', open: false, modalOpen: false, isInvalidName: false };\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.closeSnackbar = this.closeSnackbar.bind(this);\n\t\tthis.handleModalOpen = this.handleModalOpen.bind(this);\n\t\tthis.handleModalClose = this.handleModalClose.bind(this);\n\t}\n\thandleModalOpen() {\n\t\tthis.setState({ modalOpen: true });\n\t}\n\thandleModalClose() {\n\t\tthis.setState({ modalOpen: false });\n\t}\n\n\tcloseSnackbar() {\n\t\tthis.setState({ open: false });\n\t}\n\thandleClick(e) {\n\t\tif (!this.state.name) {\n\t\t\tthis.setState({ isInvalidName: true });\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis.setState({ isInvalidName: false });\n\t\t\t}, 3000);\n\t\t} else {\n\t\t\tthis.props.createPlaylist(this.state.name);\n\t\t\tthis.setState({ name: '', open: true, modalOpen: false });\n\t\t\te.preventDefault();\n\t\t}\n\t}\n\thandleChange(e) {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t}\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst isInvalidName = this.state.isInvalidName;\n\n\t\treturn (\n\t\t\t<div className=\"NewPlaylistForm\">\n\t\t\t\t<div className=\"NewPlaylistForm-form\">\n\t\t\t\t\t<button onClick={this.handleModalOpen} className=\"create-playlist-button\">\n\t\t\t\t\t\t{`Create Playlist (${this.props.newPlaylistTrackCount} songs)`}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<Modal\n\t\t\t\t\t\taria-labelledby=\"transition-modal-title\"\n\t\t\t\t\t\taria-describedby=\"transition-modal-description\"\n\t\t\t\t\t\tclassName={classes.modal}\n\t\t\t\t\t\topen={this.state.modalOpen}\n\t\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\t\tcloseAfterTransition\n\t\t\t\t\t\tBackdropComponent={Backdrop}\n\t\t\t\t\t\tBackdropProps={{\n\t\t\t\t\t\t\ttimeout: 500\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Fade in={this.state.modalOpen}>\n\t\t\t\t\t\t\t<div className={`${classes.paper} modal-content`}>\n\t\t\t\t\t\t\t\t<CloseIcon className=\"close-icon\" onClick={this.handleModalClose} />\n\t\t\t\t\t\t\t\t<h3>Create Playlist</h3>\n\t\t\t\t\t\t\t\t<div className=\"input-container\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclassName={`name-input ${isInvalidName && `red-outline`}`}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<div className={`invalid-name-text ${isInvalidName && `show-invalid`}`}>\n\t\t\t\t\t\t\t\t\t\tPlease name your playlist\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<button className=\"create-playlist-button\" onClick={this.handleClick}>\n\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Fade>\n\t\t\t\t\t</Modal>\n\t\t\t\t</div>\n\t\t\t\t<Snackbar\n\t\t\t\t\tanchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n\t\t\t\t\topen={this.state.open}\n\t\t\t\t\tautoHideDuration={3000}\n\t\t\t\t\tmessage={<span id=\"message-id\">Playlist added</span>}\n\t\t\t\t\tcontentprops={{ 'aria-describedby': 'message-id' }}\n\t\t\t\t\tonClose={this.closeSnackbar}\n\t\t\t\t\taction={[\n\t\t\t\t\t\t<IconButton onClick={this.closeSnackbar}>\n\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(NewPlaylistForm);\n","import React, { Component } from 'react';\nimport PlaylistSlider from './PlaylistSlider';\nimport NewPlaylistForm from './NewPlaylistForm';\nimport './MixingBoard.css';\n\nclass MixingBoard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.getNewTrackCount = this.getNewTrackCount.bind(this);\n\t}\n\tgetNewTrackCount() {\n\t\tif (this.props.chosenPlaylists.length) {\n\t\t\tconst allTrackTotals = this.props.chosenPlaylists.map((playlist) =>\n\t\t\t\tMath.floor(playlist.level / 100 * playlist.tracks.length)\n\t\t\t);\n\t\t\tconst sum = allTrackTotals.reduce((acc, currVal) => acc + currVal);\n\t\t\treturn sum;\n\t\t}\n\t}\n\trender() {\n\t\tconst { chosenPlaylists, removePlaylist, onLevelChange, createPlaylist } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"MixingBoard\">\n\t\t\t\t<div className=\"MixingBoard-container\">\n\t\t\t\t\t{chosenPlaylists.length > 0 ? (\n\t\t\t\t\t\t<div className=\"MixingBoard-playlists\">\n\t\t\t\t\t\t\t{chosenPlaylists.map((playlist) => (\n\t\t\t\t\t\t\t\t<PlaylistSlider\n\t\t\t\t\t\t\t\t\tremovePlaylist={removePlaylist}\n\t\t\t\t\t\t\t\t\tonLevelChange={onLevelChange}\n\t\t\t\t\t\t\t\t\tplaylist={playlist}\n\t\t\t\t\t\t\t\t\tkey={playlist.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"instructions-banner\">Add playlists to begin</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{chosenPlaylists.length > 0 && (\n\t\t\t\t\t<NewPlaylistForm newPlaylistTrackCount={this.getNewTrackCount()} createPlaylist={createPlaylist} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MixingBoard;\n","import React from 'react';\nimport './ErrorMessage.css';\n\nfunction ErrorMessage(props) {\n\treturn (\n\t\t<div className=\"ErrorMessage\">\n\t\t\t<div>{props.message}</div>\n\t\t</div>\n\t);\n}\n\nexport default ErrorMessage;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Navbar from './Navbar';\nimport PlaylistBar from './PlaylistBar';\nimport MixingBoard from './MixingBoard';\nimport Loader from './Loader';\nimport ErrorMessage from './ErrorMessage';\nimport './App.css';\n\nclass App extends Component {\n\tstatic defaultProps = {\n\t\tclientID: '9a9bc27e766d4e48bcd18dad29e5a877',\n\t\tredirectURI: 'http://localhost:3000',\n\t\t// redirectURI: 'https://jeremiah-quill.github.io/spotify-playlists',\n\t\tscope: 'user-read-private playlist-read-private playlist-modify-public playlist-modify-private',\n\t\tmaxPlaylists: 4\n\t};\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taccess_token: this.getHashParams().access_token,\n\t\t\tisAuthenticated: false,\n\t\t\tuserData: {},\n\t\t\tplaylists: [],\n\t\t\tisLoadingPlaylists: true,\n\t\t\tisLoadingNewPlaylist: false,\n\t\t\tchosenPlaylists: [],\n\t\t\tisMorePlaylists: '',\n\t\t\tisError: ''\n\t\t};\n\t\tthis.getHashParams = this.getHashParams.bind(this);\n\t\tthis.addPlaylist = this.addPlaylist.bind(this);\n\t\tthis.removePlaylist = this.removePlaylist.bind(this);\n\t\tthis.createPlaylist = this.createPlaylist.bind(this);\n\t\tthis.onLevelChange = this.onLevelChange.bind(this);\n\t\tthis.findMorePlaylists = this.findMorePlaylists.bind(this);\n\t\tthis.extractPlaylists = this.extractPlaylists.bind(this);\n\t\tthis.getTracks = this.getTracks.bind(this);\n\t\tthis.getAllTracks = this.getAllTracks.bind(this);\n\t\tthis.getCurrentUser = this.getCurrentUser.bind(this);\n\t}\n\n\tasync componentDidMount() {\n\t\tconst authorizeURL = `https://accounts.spotify.com/authorize?client_id=${this.props\n\t\t\t.clientID}&redirect_uri=${this.props.redirectURI}&scope=${this.props\n\t\t\t.scope}&show_dialog=true&response_type=token`;\n\t\tif (!this.state.access_token) {\n\t\t\twindow.location.href = authorizeURL;\n\t\t}\n\n\t\t// get user data\n\t\tlet userResponse = await this.getCurrentUser(this.state.access_token);\n\t\tif (!userResponse.data) {\n\t\t\tthis.setState({\n\t\t\t\tisError: `Error: ${userResponse.response.status}`\n\t\t\t});\n\t\t} else {\n\t\t\t// get playlists data\n\t\t\tlet playlistsResponse = await this.getPlaylists(\n\t\t\t\t`https://api.spotify.com/v1/users/${userResponse.data.id}/playlists/?limit=20`\n\t\t\t);\n\t\t\tif (!playlistsResponse.data) {\n\t\t\t\tthis.setState({\n\t\t\t\t\tisError: `Error: ${playlistsResponse.response.status}`\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// extract tracks from playlists and build up objects to store in state\n\t\t\t\tconst playlists = await this.extractPlaylists(playlistsResponse.data);\n\t\t\t\tthis.setState({\n\t\t\t\t\tplaylists: playlists,\n\t\t\t\t\tuserData: userResponse.data,\n\t\t\t\t\tisLoadingPlaylists: false,\n\t\t\t\t\tisMorePlaylists: playlistsResponse.data.next\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getCurrentUser(token) {\n\t\ttry {\n\t\t\tlet res = await axios.get(`https://api.spotify.com/v1/me`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn res;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync getPlaylists(url) {\n\t\ttry {\n\t\t\tconst res = await axios.get(url, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'Bearer ' + this.state.access_token\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn res;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\tasync extractPlaylists(playlistsData) {\n\t\tlet playlists = [];\n\t\tfor (let i = 0; i < playlistsData.items.length; i++) {\n\t\t\tlet url = `https://api.spotify.com/v1/playlists/${playlistsData.items[i].id}/tracks`;\n\t\t\tconst allTracks = await this.getAllTracks(url);\n\t\t\tconst newPlaylist = {\n\t\t\t\tname: playlistsData.items[i].name,\n\t\t\t\tid: playlistsData.items[i].id,\n\t\t\t\ttracks: allTracks\n\t\t\t};\n\t\t\tplaylists.push(newPlaylist);\n\t\t}\n\t\treturn playlists;\n\t}\n\n\t// call getTracks until keepGoing is false (when there is no newURL)\n\tasync getAllTracks(URL) {\n\t\tlet allTracks = [];\n\t\tlet keepGoing = true;\n\t\tlet newURL = URL;\n\t\twhile (keepGoing) {\n\t\t\tlet res = await this.getTracks(newURL);\n\t\t\tif (!res.data) {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < res.data.items.length; i++) {\n\t\t\t\t\tlet track = {\n\t\t\t\t\t\tname: res.data.items[i].track.name,\n\t\t\t\t\t\tid: res.data.items[i].track.id,\n\t\t\t\t\t\tartists: res.data.items[i].track.artists.map((artist) => ({\n\t\t\t\t\t\t\tname: artist.name,\n\t\t\t\t\t\t\tid: artist.id\n\t\t\t\t\t\t}))\n\t\t\t\t\t};\n\t\t\t\t\tallTracks.push(track);\n\t\t\t\t}\n\t\t\t\tnewURL = res.data.next;\n\t\t\t\tif (!newURL) {\n\t\t\t\t\tkeepGoing = false;\n\t\t\t\t\treturn allTracks;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getTracks(URL) {\n\t\ttry {\n\t\t\tconst res = await axios.get(`${URL}`, {\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'Bearer ' + this.state.access_token\n\t\t\t\t}\n\t\t\t});\n\t\t\treturn res;\n\t\t} catch (err) {\n\t\t\treturn err;\n\t\t}\n\t}\n\n\taddPlaylist(playlist) {\n\t\tif (this.state.chosenPlaylists.length < this.props.maxPlaylists) {\n\t\t\tconst newPlaylist = { ...playlist, level: 50 };\n\t\t\tthis.setState((currSt) => ({ chosenPlaylists: [ ...currSt.chosenPlaylists, newPlaylist ] }));\n\t\t}\n\t}\n\n\tremovePlaylist(playlistID) {\n\t\tthis.setState((currSt) => ({\n\t\t\tchosenPlaylists: this.state.chosenPlaylists.filter((playlist) => playlist.id !== playlistID)\n\t\t}));\n\t}\n\n\tonLevelChange(id, newLevel) {\n\t\tconst updatedPlaylists = this.state.chosenPlaylists.map((playlist) => {\n\t\t\tif (playlist.id === id) {\n\t\t\t\treturn { ...playlist, level: newLevel };\n\t\t\t}\n\t\t\treturn playlist;\n\t\t});\n\t\tthis.setState({ chosenPlaylists: updatedPlaylists });\n\t}\n\n\t// Curates each chosen playlist, pushes it into newPlaylist, adds a new playlist to spotify, and adds songs to that playlist in spotify\n\tasync createPlaylist(playlistName) {\n\t\tthis.setState({ isLoadingNewPlaylist: true });\n\t\tlet newPlaylist = [];\n\t\tfor (let i = 0; i < this.state.chosenPlaylists.length; i++) {\n\t\t\tlet curatedPlaylist = this.curatePlaylist(this.state.chosenPlaylists[i]);\n\t\t\tfor (let i = 0; i < curatedPlaylist.length; i++) {\n\t\t\t\tnewPlaylist.push(curatedPlaylist[i]);\n\t\t\t}\n\t\t}\n\t\tthis.shuffle(newPlaylist);\n\t\tconst response = await axios.post(\n\t\t\t`https://api.spotify.com/v1/users/${this.state.userData.id}/playlists`,\n\t\t\t{ name: playlistName },\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'Bearer ' + this.state.access_token\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tconst playlistID = await response.data.id;\n\t\tawait this.addAllTracks(newPlaylist, playlistID);\n\t\tlet playlistsData = await this.getPlaylists(\n\t\t\t`https://api.spotify.com/v1/users/${this.state.userData.id}/playlists`\n\t\t);\n\t\tconst playlists = await this.extractPlaylists(playlistsData.data);\n\t\tthis.setState({ playlists: playlists, isMorePlaylists: playlistsData.next, isLoadingNewPlaylist: false });\n\t}\n\n\t// Take a playlist and randomly curate it based on # tracks chosen\n\tcuratePlaylist(playlist) {\n\t\tconst workingPlaylist = { ...playlist, tracks: [ ...playlist.tracks ] };\n\t\tlet curatedPlaylistNewTotal = Math.floor(workingPlaylist.level / 100 * workingPlaylist.tracks.length);\n\t\tconst newPlaylist = [];\n\t\tfor (let i = 0; i < curatedPlaylistNewTotal; i++) {\n\t\t\tlet randomIndex = Math.floor(Math.random() * workingPlaylist.tracks.length);\n\t\t\tnewPlaylist.push(workingPlaylist.tracks[randomIndex]);\n\t\t\tworkingPlaylist.tracks.splice(randomIndex, 1);\n\t\t}\n\t\treturn newPlaylist;\n\t}\n\n\tasync addTracks(tracks, playlistID) {\n\t\tawait axios.post(\n\t\t\t`https://api.spotify.com/v1/playlists/${playlistID}/tracks`,\n\t\t\t{ uris: this.formatURIs(tracks) },\n\t\t\t{ headers: { Authorization: 'Bearer ' + this.state.access_token } }\n\t\t);\n\t}\n\n\tasync addAllTracks(playlist, playlistID) {\n\t\tlet tracksLeftToSend = playlist.length;\n\t\tlet startIndex = 0;\n\t\tlet endIndex = tracksLeftToSend > 100 ? 100 : tracksLeftToSend;\n\t\tlet nextSetOfTracks = playlist.slice(startIndex, endIndex);\n\t\twhile (tracksLeftToSend) {\n\t\t\t// send nextSetOfTracks to playlistID\n\t\t\tawait this.addTracks(nextSetOfTracks, playlistID);\n\t\t\t// update tracksLeftToSend to see how many are left\n\t\t\ttracksLeftToSend = tracksLeftToSend - nextSetOfTracks.length;\n\t\t\t// update start index\n\t\t\tstartIndex = startIndex + nextSetOfTracks.length;\n\t\t\t// update end index\n\t\t\tendIndex = tracksLeftToSend > 100 ? endIndex + 100 : endIndex + tracksLeftToSend;\n\t\t\t// create nextSetOfTracks\n\t\t\tnextSetOfTracks = playlist.slice(startIndex, endIndex);\n\t\t}\n\t}\n\n\t// Format URIs for createPlaylist API call\n\tformatURIs(playlist) {\n\t\tconst formattedURI = playlist.map((track) => this.formatTrackID(track.id));\n\t\treturn formattedURI;\n\t}\n\n\t// Format the track ID to be used in formatURIs\n\tformatTrackID(trackID) {\n\t\treturn `spotify:track:${trackID}`;\n\t}\n\n\t// Fires API call to get next page of playlists (button is not rendered if there is no next) and add it to state\n\tasync findMorePlaylists() {\n\t\tthis.setState({ isLoadingNewPlaylist: true });\n\t\tconst playlistsResponse = await this.getPlaylists(this.state.isMorePlaylists);\n\t\tconst playlists = await this.extractPlaylists(playlistsResponse.data);\n\t\tthis.setState((currSt) => ({\n\t\t\tplaylists: [ ...currSt.playlists, ...playlists ],\n\t\t\tisLoadingNewPlaylist: false,\n\t\t\tisMorePlaylists: playlistsResponse.data.next\n\t\t}));\n\t}\n\n\t// Shuffle function taken from stackoverflow\n\tshuffle(array) {\n\t\tvar currentIndex = array.length,\n\t\t\ttemporaryValue,\n\t\t\trandomIndex;\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 !== currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex -= 1;\n\t\t\t// And swap it with the current element.\n\t\t\ttemporaryValue = array[currentIndex];\n\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\tarray[randomIndex] = temporaryValue;\n\t\t}\n\t\treturn array;\n\t}\n\n\t// Extract hashParams so we can extract access_token (taken from spotify API documentation examples)\n\tgetHashParams() {\n\t\tvar hashParams = {};\n\t\tvar e,\n\t\t\tr = /([^&;=]+)=?([^&;]*)/g,\n\t\t\tq = window.location.hash.substring(1);\n\t\twhile ((e = r.exec(q))) {\n\t\t\thashParams[e[1]] = decodeURIComponent(e[2]);\n\t\t}\n\t\treturn hashParams;\n\t}\n\n\trender() {\n\t\tconst authorizeURL = `https://accounts.spotify.com/authorize?client_id=${this.props\n\t\t\t.clientID}&redirect_uri=${this.props.redirectURI}&scope=${this.props\n\t\t\t.scope}&show_dialog=true&response_type=token`;\n\n\t\tconst {\n\t\t\taccess_token,\n\t\t\tchosenPlaylists,\n\t\t\tisLoadingPlaylists,\n\t\t\tisLoadingNewPlaylist,\n\t\t\tplaylists,\n\t\t\tisMorePlaylists,\n\t\t\tisError\n\t\t} = this.state;\n\t\treturn isError ? (\n\t\t\t<ErrorMessage message={isError} />\n\t\t) : isLoadingPlaylists ? (\n\t\t\t<Loader />\n\t\t) : (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navbar authorizeURL={authorizeURL} accessToken={access_token} username={this.state.userData.id} />\n\t\t\t\t<div className=\"App-content-container\">\n\t\t\t\t\t<PlaylistBar\n\t\t\t\t\t\tchosenPlaylistIDs={chosenPlaylists.map((playlist) => playlist.id)}\n\t\t\t\t\t\taddPlaylist={this.addPlaylist}\n\t\t\t\t\t\tremovePlaylist={this.removePlaylist}\n\t\t\t\t\t\tisLoading={isLoadingNewPlaylist}\n\t\t\t\t\t\tplaylists={playlists}\n\t\t\t\t\t\tisMorePlaylists={isMorePlaylists}\n\t\t\t\t\t\tfindMorePlaylists={this.findMorePlaylists}\n\t\t\t\t\t/>\n\t\t\t\t\t<MixingBoard\n\t\t\t\t\t\tchosenPlaylists={chosenPlaylists}\n\t\t\t\t\t\tcreatePlaylist={this.createPlaylist}\n\t\t\t\t\t\tremovePlaylist={this.removePlaylist}\n\t\t\t\t\t\tonLevelChange={this.onLevelChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ErrorBoundary from './ErrorBoundary';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ErrorBoundary>\n\t\t\t<App />\n\t\t</ErrorBoundary>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/spotify-icon-logo.11dc437a.png\";"],"sourceRoot":""}