{"version":3,"sources":["ErrorBoundary.js","Navbar.js","Playlist.js","Loader.js","PlaylistBar.js","PlaylistSlider.js","NewPlaylistForm.js","MixingBoard.js","App.js","serviceWorker.js","index.js","spotify-icon-logo.png"],"names":["ErrorBoundary","props","state","isError","error","errorInfo","console","log","this","className","children","Component","Navbar","isDropdown","handleClick","bind","setState","currSt","username","onClick","Playlist","isLocked","removePlaylist","playlist","id","addPlaylist","name","Loader","PlaylistBar","findMorePlaylists","playlists","chosenPlaylistIDs","isMorePlaylists","isLoading","src","SpotifyIconLogo","alt","map","key","indexOf","PlaylistSlider","isChanging","handleChange","handleChangeCommitted","e","value","onLevelChange","classes","totalTrackCount","tracks","length","halfTrackCount","Math","floor","level","root","Slider","orientation","onChangeCommitted","onChange","defaultValue","withStyles","height","NewPlaylistForm","open","modalOpen","closeSnackbar","handleModalOpen","handleModalClose","createPlaylist","preventDefault","target","newPlaylistTrackCount","Modal","aria-labelledby","aria-describedby","modal","onClose","handleClose","closeAfterTransition","BackdropComponent","Backdrop","BackdropProps","timeout","Fade","in","paper","htmlFor","type","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","contentprops","action","IconButton","display","alignItems","justifyContent","border","MixingBoard","getNewTrackCount","chosenPlaylists","reduce","acc","currVal","App","access_token","getHashParams","isAuthenticated","userData","isLoadingPlaylists","isLoadingNewPlaylist","extractPlaylists","getTracks","getAllTracks","window","location","href","getCurrentUser","getPlaylists","playlistsData","next","token","axios","get","headers","Authorization","res","data","url","i","items","allTracks","newPlaylist","push","URL","keepGoing","newURL","response","track","artists","artist","maxPlaylists","playlistID","filter","newLevel","updatedPlaylists","playlistName","curatedPlaylist","curatePlaylist","shuffle","post","addAllTracks","workingPlaylist","curatedPlaylistNewTotal","randomIndex","random","splice","uris","formatURIs","tracksLeftToSend","startIndex","endIndex","nextSetOfTracks","slice","addTracks","formatTrackID","trackID","playlistsResponse","array","temporaryValue","currentIndex","hashParams","r","q","hash","substring","exec","decodeURIComponent","authorizeURL","clientID","redirectURI","scope","accessToken","defaultProps","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","module","exports"],"mappings":"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","file":"static/js/main.4bd60543.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isError: false };\n\t}\n\tcomponentDidCatch(error, errorInfo) {\n\t\tconsole.log(`ERROR: ${error}, ERRORINFO: ${errorInfo}`);\n\t\t// You can also log the error to an error reporting service\n\t\t// logErrorToMyService(error, errorInfo);\n\t}\n\n\tstatic getDerivedStateFromError(error) {\n\t\t// Update state so the next render will show the fallback UI.\n\t\treturn { isError: true };\n\t}\n\trender() {\n\t\tif (this.state.isError) {\n\t\t\treturn <div className=\"ErrorBoundary\">Sorry, an error occured!</div>;\n\t\t}\n\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;\n","import React, { Component } from 'react';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowDropUpIcon from '@material-ui/icons/ArrowDropUp';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport './Navbar.css';\n\nclass Navbar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isDropdown: false };\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick() {\n\t\tthis.setState((currSt) => ({ isDropdown: !currSt.isDropdown }));\n\t}\n\trender() {\n\t\treturn (\n\t\t\t<div className=\"Navbar\">\n\t\t\t\t{this.props.username && (\n\t\t\t\t\t<div onClick={this.handleClick} className=\"account-widget\">\n\t\t\t\t\t\t<PersonIcon className=\"userIcon\" />\n\t\t\t\t\t\t<span>{this.props.username}</span>\n\t\t\t\t\t\t{this.state.isDropdown ? <ArrowDropUpIcon /> : <ArrowDropDownIcon />}\n\t\t\t\t\t\t{this.state.isDropdown && (\n\t\t\t\t\t\t\t<div className=\"dropdown-menu\">\n\t\t\t\t\t\t\t\t<div className=\"dropdown-item\">dropdown item</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</div>\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Navbar;\n","import React, { Component } from 'react';\nimport './Playlist.css';\n\nclass Playlist extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick() {\n\t\tif (!this.props.isLocked) {\n\t\t\tthis.props.addPlaylist(this.props.playlist);\n\t\t} else {\n\t\t\tthis.props.removePlaylist(this.props.playlist.id);\n\t\t}\n\t}\n\trender() {\n\t\tconst { isLocked, playlist } = this.props;\n\t\treturn (\n\t\t\t<div className={`Playlist ${isLocked && 'disabled'}`} onClick={this.handleClick}>\n\t\t\t\t<div className=\"Playlist-name\">{playlist.name}</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Playlist;\n","import React from 'react';\nimport './Loader.css';\n\nfunction Loader(props) {\n\treturn (\n\t\t<div className=\"kabobloader\">\n\t\t\t<div className=\"bounce1\" />\n\t\t\t<div className=\"bounce2\" />\n\t\t\t<div className=\"bounce3\" />\n\t\t</div>\n\t);\n}\n\nexport default Loader;\n","import React, { Component } from 'react';\nimport Playlist from './Playlist';\nimport Loader from './Loader';\nimport SpotifyIconLogo from './spotify-icon-logo.png';\nimport './PlaylistBar.css';\n\nclass PlaylistBar extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\thandleClick() {\n\t\tthis.props.findMorePlaylists();\n\t}\n\trender() {\n\t\tconst { playlists, addPlaylist, removePlaylist, chosenPlaylistIDs, isMorePlaylists, isLoading } = this.props;\n\t\treturn (\n\t\t\t<div className=\"PlaylistBar-container\">\n\t\t\t\t<div className=\"sidebar-branding\">\n\t\t\t\t\t<img src={SpotifyIconLogo} alt=\"spotify-logo\" className=\"logo\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"PlaylistBar\">\n\t\t\t\t\t{isLoading ? (\n\t\t\t\t\t\t<Loader />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"playlists-container\">\n\t\t\t\t\t\t\t{playlists.map((playlist) => (\n\t\t\t\t\t\t\t\t<Playlist\n\t\t\t\t\t\t\t\t\taddPlaylist={addPlaylist}\n\t\t\t\t\t\t\t\t\tremovePlaylist={removePlaylist}\n\t\t\t\t\t\t\t\t\tkey={playlist.id}\n\t\t\t\t\t\t\t\t\tisLocked={chosenPlaylistIDs.indexOf(playlist.id) !== -1}\n\t\t\t\t\t\t\t\t\tplaylist={playlist}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t{isMorePlaylists && (\n\t\t\t\t\t\t\t\t<div className=\"more-playlist-button-container\">\n\t\t\t\t\t\t\t\t\t<div onClick={this.handleClick} className=\"more-playlist-button\">\n\t\t\t\t\t\t\t\t\t\tMore Playlists\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default PlaylistBar;\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Slider from '@material-ui/core/Slider';\nimport CloseIcon from '@material-ui/icons/Close';\nimport './PlaylistSlider.css';\n\nconst styles = {\n\troot: {\n\t\theight: '300px'\n\t}\n};\n\nclass PlaylistSlider extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { isChanging: false };\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.handleChangeCommitted = this.handleChangeCommitted.bind(this);\n\t}\n\thandleClick() {\n\t\tthis.props.removePlaylist(this.props.playlist.id);\n\t}\n\thandleChange(e, value) {\n\t\tthis.props.onLevelChange(this.props.playlist.id, value);\n\t\tthis.setState({ isChanging: true });\n\t}\n\thandleChangeCommitted() {\n\t\tthis.setState({ isChanging: false });\n\t}\n\trender() {\n\t\tconst { classes, playlist } = this.props;\n\t\tconst totalTrackCount = playlist.tracks.length;\n\t\tconst halfTrackCount = Math.floor(playlist.level / 100 * playlist.tracks.length);\n\n\t\treturn (\n\t\t\t<div className=\"PlaylistSlider\">\n\t\t\t\t<CloseIcon className=\"PlaylistSlider-remove-button\" onClick={this.handleClick} />\n\t\t\t\t<div className={classes.root}>\n\t\t\t\t\t<Slider\n\t\t\t\t\t\tclassName=\"slider\"\n\t\t\t\t\t\torientation=\"vertical\"\n\t\t\t\t\t\tonChangeCommitted={this.handleChangeCommitted}\n\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\tdefaultValue={50}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div className=\"track-count-container\">\n\t\t\t\t\t<span className={`${this.state.isChanging && 'isChanging'}`}>{halfTrackCount}</span>\n\n\t\t\t\t\t<span className=\"track-count\">{`/ ${totalTrackCount}`}</span>\n\t\t\t\t</div>\n\t\t\t\t<h3 className=\"playlist-name\">{playlist.name}</h3>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(PlaylistSlider);\n","import React, { Component } from 'react';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { withStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport Backdrop from '@material-ui/core/Backdrop';\nimport Fade from '@material-ui/core/Fade';\nimport './NewPlaylistForm.css';\n\nconst styles = {\n\tmodal: {\n\t\tdisplay: 'flex',\n\t\talignItems: 'center',\n\t\tjustifyContent: 'center'\n\t},\n\tpaper: {\n\t\t// backgroundColor: theme.palette.background.paper,\n\t\tborder: '2px solid #000'\n\t\t// boxShadow: theme.shadows[5],\n\t\t// padding: theme.spacing(2, 4, 3)\n\t}\n};\n\nclass NewPlaylistForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = { name: '', open: false, modalOpen: false };\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t\tthis.handleChange = this.handleChange.bind(this);\n\t\tthis.closeSnackbar = this.closeSnackbar.bind(this);\n\t\tthis.handleModalOpen = this.handleModalOpen.bind(this);\n\t\tthis.handleModalClose = this.handleModalClose.bind(this);\n\t}\n\thandleModalOpen() {\n\t\tthis.setState({ modalOpen: true });\n\t}\n\thandleModalClose() {\n\t\tthis.setState({ modalOpen: false });\n\t}\n\n\tcloseSnackbar() {\n\t\tthis.setState({ open: false });\n\t}\n\thandleClick(e) {\n\t\tthis.props.createPlaylist(this.state.name);\n\t\tthis.setState({ name: '', open: true, modalOpen: false });\n\t\te.preventDefault();\n\t}\n\thandleChange(e) {\n\t\tthis.setState({ [e.target.name]: e.target.value });\n\t}\n\trender() {\n\t\tconst { classes } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"NewPlaylistForm\">\n\t\t\t\t<div className=\"NewPlaylistForm-form\">\n\t\t\t\t\t<button onClick={this.handleModalOpen} className=\"create-playlist-button\">\n\t\t\t\t\t\t{`Create Playlist (${this.props.newPlaylistTrackCount} songs)`}\n\t\t\t\t\t</button>\n\n\t\t\t\t\t<Modal\n\t\t\t\t\t\taria-labelledby=\"transition-modal-title\"\n\t\t\t\t\t\taria-describedby=\"transition-modal-description\"\n\t\t\t\t\t\tclassName={classes.modal}\n\t\t\t\t\t\topen={this.state.modalOpen}\n\t\t\t\t\t\tonClose={this.handleClose}\n\t\t\t\t\t\tcloseAfterTransition\n\t\t\t\t\t\tBackdropComponent={Backdrop}\n\t\t\t\t\t\tBackdropProps={{\n\t\t\t\t\t\t\ttimeout: 500\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Fade in={this.state.modalOpen}>\n\t\t\t\t\t\t\t<div className={`${classes.paper} modal-content`}>\n\t\t\t\t\t\t\t\t<CloseIcon className=\"close-icon\" onClick={this.handleModalClose} />\n\t\t\t\t\t\t\t\t<h3>Create Playlist</h3>\n\t\t\t\t\t\t\t\t<div className=\"input-container\">\n\t\t\t\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\n\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\tid=\"name\"\n\t\t\t\t\t\t\t\t\t\tonChange={this.handleChange}\n\t\t\t\t\t\t\t\t\t\tvalue={this.state.name}\n\t\t\t\t\t\t\t\t\t\tname=\"name\"\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tclassName=\"name-input\"\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button className=\"create-playlist-button\" onClick={this.handleClick}>\n\t\t\t\t\t\t\t\t\t\tSubmit\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Fade>\n\t\t\t\t\t</Modal>\n\t\t\t\t</div>\n\t\t\t\t<Snackbar\n\t\t\t\t\tanchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n\t\t\t\t\topen={this.state.open}\n\t\t\t\t\tautoHideDuration={3000}\n\t\t\t\t\tmessage={<span id=\"message-id\">Playlist added</span>}\n\t\t\t\t\tcontentprops={{ 'aria-describedby': 'message-id' }}\n\t\t\t\t\tonClose={this.closeSnackbar}\n\t\t\t\t\taction={[\n\t\t\t\t\t\t<IconButton onClick={this.closeSnackbar}>\n\t\t\t\t\t\t\t<CloseIcon />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t]}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(NewPlaylistForm);\n","import React, { Component } from 'react';\nimport PlaylistSlider from './PlaylistSlider';\nimport NewPlaylistForm from './NewPlaylistForm';\nimport './MixingBoard.css';\n\nclass MixingBoard extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.getNewTrackCount = this.getNewTrackCount.bind(this);\n\t}\n\tgetNewTrackCount() {\n\t\tif (this.props.chosenPlaylists.length) {\n\t\t\tconst allTrackTotals = this.props.chosenPlaylists.map((playlist) =>\n\t\t\t\tMath.floor(playlist.level / 100 * playlist.tracks.length)\n\t\t\t);\n\t\t\tconst sum = allTrackTotals.reduce((acc, currVal) => acc + currVal);\n\t\t\treturn sum;\n\t\t}\n\t}\n\trender() {\n\t\tconst { chosenPlaylists, removePlaylist, onLevelChange, createPlaylist } = this.props;\n\n\t\treturn (\n\t\t\t<div className=\"MixingBoard\">\n\t\t\t\t<div className=\"MixingBoard-container\">\n\t\t\t\t\t{chosenPlaylists.length > 0 ? (\n\t\t\t\t\t\t<div className=\"MixingBoard-playlists\">\n\t\t\t\t\t\t\t{chosenPlaylists.map((playlist) => (\n\t\t\t\t\t\t\t\t<PlaylistSlider\n\t\t\t\t\t\t\t\t\tremovePlaylist={removePlaylist}\n\t\t\t\t\t\t\t\t\tonLevelChange={onLevelChange}\n\t\t\t\t\t\t\t\t\tplaylist={playlist}\n\t\t\t\t\t\t\t\t\tkey={playlist.id}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"instructions-banner\">Add playlists to begin</div>\n\t\t\t\t\t)}\n\t\t\t\t</div>\n\t\t\t\t{chosenPlaylists.length > 0 && (\n\t\t\t\t\t<NewPlaylistForm newPlaylistTrackCount={this.getNewTrackCount()} createPlaylist={createPlaylist} />\n\t\t\t\t)}\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default MixingBoard;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport Navbar from './Navbar';\nimport PlaylistBar from './PlaylistBar';\nimport MixingBoard from './MixingBoard';\nimport Loader from './Loader';\nimport './App.css';\n\nclass App extends Component {\n\tstatic defaultProps = {\n\t\tclientID: '9a9bc27e766d4e48bcd18dad29e5a877',\n\t\t// redirectURI: 'http://localhost:3000',\n\t\tredirectURI: 'https://jeremiah-quill.github.io/spotify-playlists',\n\t\tscope: 'user-read-private playlist-read-private playlist-modify-public playlist-modify-private',\n\t\tmaxPlaylists: 4\n\t};\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\taccess_token: this.getHashParams().access_token,\n\t\t\tisAuthenticated: false,\n\t\t\tuserData: {},\n\t\t\tplaylists: [],\n\t\t\tisLoadingPlaylists: true,\n\t\t\tisLoadingNewPlaylist: false,\n\t\t\tchosenPlaylists: [],\n\t\t\tisMorePlaylists: ''\n\t\t};\n\t\tthis.getHashParams = this.getHashParams.bind(this);\n\t\tthis.addPlaylist = this.addPlaylist.bind(this);\n\t\tthis.removePlaylist = this.removePlaylist.bind(this);\n\t\tthis.createPlaylist = this.createPlaylist.bind(this);\n\t\tthis.onLevelChange = this.onLevelChange.bind(this);\n\t\tthis.findMorePlaylists = this.findMorePlaylists.bind(this);\n\t\tthis.extractPlaylists = this.extractPlaylists.bind(this);\n\t\tthis.getTracks = this.getTracks.bind(this);\n\t\tthis.getAllTracks = this.getAllTracks.bind(this);\n\t}\n\n\tasync componentDidMount() {\n\t\tconst authorizeURL = `https://accounts.spotify.com/authorize?client_id=9a9bc27e766d4e48bcd18dad29e5a877&redirect_uri=https://jeremiah-quill.github.io/spotify-playlists&scope=user-read-private playlist-read-private playlist-modify-public playlist-modify-private&show_dialog=true&response_type=token`;\n\t\tif (!this.state.access_token) {\n\t\t\twindow.location.href = authorizeURL;\n\t\t}\n\n\t\t// get user data\n\t\tlet userData = await this.getCurrentUser(this.state.access_token);\n\n\t\t// get playlists data\n\t\tlet playlistsData = await this.getPlaylists(\n\t\t\t`https://api.spotify.com/v1/users/${userData.id}/playlists/?limit=20`\n\t\t);\n\n\t\t// extract tracks from playlists and build up objects to store in state\n\t\tconst playlists = await this.extractPlaylists(playlistsData);\n\t\tthis.setState({\n\t\t\tplaylists: playlists,\n\t\t\tuserData: userData,\n\t\t\tisLoadingPlaylists: false,\n\t\t\tisMorePlaylists: playlistsData.next\n\t\t});\n\t}\n\n\tasync getCurrentUser(token) {\n\t\tlet res = await axios.get(`https://api.spotify.com/v1/me`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer ' + token\n\t\t\t}\n\t\t});\n\t\tlet userData = res.data;\n\t\treturn userData;\n\t}\n\n\tasync getPlaylists(url) {\n\t\tconst res = await axios.get(url, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer ' + this.state.access_token\n\t\t\t}\n\t\t});\n\t\tlet playlistsData = res.data;\n\t\treturn playlistsData;\n\t}\n\n\tasync extractPlaylists(playlistsData) {\n\t\tlet playlists = [];\n\t\tfor (let i = 0; i < playlistsData.items.length; i++) {\n\t\t\tlet url = `https://api.spotify.com/v1/playlists/${playlistsData.items[i].id}/tracks`;\n\t\t\tconst allTracks = await this.getAllTracks(url);\n\t\t\tconst newPlaylist = {\n\t\t\t\tname: playlistsData.items[i].name,\n\t\t\t\tid: playlistsData.items[i].id,\n\t\t\t\ttracks: allTracks\n\t\t\t};\n\t\t\tplaylists.push(newPlaylist);\n\t\t}\n\t\treturn playlists;\n\t}\n\n\t// getAllTracks uses recursion to call getTracks for as long as it takes until there is no \"next\" pagination\n\tasync getAllTracks(URL) {\n\t\tlet allTracks = [];\n\t\tlet keepGoing = true;\n\t\tlet newURL = URL;\n\t\twhile (keepGoing) {\n\t\t\tlet response = await this.getTracks(newURL);\n\t\t\tfor (let i = 0; i < response.data.items.length; i++) {\n\t\t\t\tlet track = {\n\t\t\t\t\tname: response.data.items[i].track.name,\n\t\t\t\t\tid: response.data.items[i].track.id,\n\t\t\t\t\tartists: response.data.items[i].track.artists.map((artist) => ({\n\t\t\t\t\t\tname: artist.name,\n\t\t\t\t\t\tid: artist.id\n\t\t\t\t\t}))\n\t\t\t\t};\n\t\t\t\tallTracks.push(track);\n\t\t\t}\n\t\t\tnewURL = response.data.next;\n\t\t\tif (!newURL) {\n\t\t\t\tkeepGoing = false;\n\t\t\t\treturn allTracks;\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getTracks(URL) {\n\t\tconst tracks = await axios.get(`${URL}`, {\n\t\t\theaders: {\n\t\t\t\tAuthorization: 'Bearer ' + this.state.access_token\n\t\t\t}\n\t\t});\n\t\treturn tracks;\n\t}\n\n\taddPlaylist(playlist) {\n\t\tif (this.state.chosenPlaylists.length < this.props.maxPlaylists) {\n\t\t\tconst newPlaylist = { ...playlist, level: 50 };\n\t\t\tthis.setState((currSt) => ({ chosenPlaylists: [ ...currSt.chosenPlaylists, newPlaylist ] }));\n\t\t} else {\n\t\t\t// render breadcrumb saying `you can only add ${this.props.maxPlaylists} playlists` *********\n\t\t}\n\t}\n\n\tremovePlaylist(playlistID) {\n\t\tthis.setState((currSt) => ({\n\t\t\tchosenPlaylists: this.state.chosenPlaylists.filter((playlist) => playlist.id !== playlistID)\n\t\t}));\n\t}\n\n\tonLevelChange(id, newLevel) {\n\t\tconst updatedPlaylists = this.state.chosenPlaylists.map((playlist) => {\n\t\t\tif (playlist.id === id) {\n\t\t\t\treturn { ...playlist, level: newLevel };\n\t\t\t}\n\t\t\treturn playlist;\n\t\t});\n\t\tthis.setState({ chosenPlaylists: updatedPlaylists });\n\t}\n\n\t// Curates each chosen playlist, pushes it into newPlaylist, adds a new playlist to spotify, and adds songs to that playlist in spotify\n\tasync createPlaylist(playlistName) {\n\t\tthis.setState({ isLoadingNewPlaylist: true });\n\t\tlet newPlaylist = [];\n\t\tfor (let i = 0; i < this.state.chosenPlaylists.length; i++) {\n\t\t\tlet curatedPlaylist = this.curatePlaylist(this.state.chosenPlaylists[i]);\n\t\t\tfor (let i = 0; i < curatedPlaylist.length; i++) {\n\t\t\t\tnewPlaylist.push(curatedPlaylist[i]);\n\t\t\t}\n\t\t}\n\t\tthis.shuffle(newPlaylist);\n\t\tconst response = await axios.post(\n\t\t\t`https://api.spotify.com/v1/users/${this.state.userData.id}/playlists`,\n\t\t\t{ name: playlistName },\n\t\t\t{\n\t\t\t\theaders: {\n\t\t\t\t\tAuthorization: 'Bearer ' + this.state.access_token\n\t\t\t\t}\n\t\t\t}\n\t\t);\n\n\t\tconst playlistID = await response.data.id;\n\t\tawait this.addAllTracks(newPlaylist, playlistID);\n\t\tlet playlistsData = await this.getPlaylists(\n\t\t\t`https://api.spotify.com/v1/users/${this.state.userData.id}/playlists`\n\t\t);\n\t\tconst playlists = await this.extractPlaylists(playlistsData);\n\n\t\tthis.setState({ playlists: playlists, isMorePlaylists: playlistsData.next, isLoadingNewPlaylist: false });\n\t}\n\n\t// Take a playlist and randomly curate it based on # tracks chosen\n\tcuratePlaylist(playlist) {\n\t\tconst workingPlaylist = { ...playlist, tracks: [ ...playlist.tracks ] };\n\t\tlet curatedPlaylistNewTotal = Math.floor(workingPlaylist.level / 100 * workingPlaylist.tracks.length);\n\t\tconst newPlaylist = [];\n\t\tfor (let i = 0; i < curatedPlaylistNewTotal; i++) {\n\t\t\tlet randomIndex = Math.floor(Math.random() * workingPlaylist.tracks.length);\n\t\t\tnewPlaylist.push(workingPlaylist.tracks[randomIndex]);\n\t\t\tworkingPlaylist.tracks.splice(randomIndex, 1);\n\t\t}\n\t\treturn newPlaylist;\n\t}\n\n\tasync addTracks(tracks, playlistID) {\n\t\tawait axios.post(\n\t\t\t`https://api.spotify.com/v1/playlists/${playlistID}/tracks`,\n\t\t\t{ uris: this.formatURIs(tracks) },\n\t\t\t{ headers: { Authorization: 'Bearer ' + this.state.access_token } }\n\t\t);\n\t}\n\n\tasync addAllTracks(playlist, playlistID) {\n\t\tlet tracksLeftToSend = playlist.length;\n\t\tlet startIndex = 0;\n\t\tlet endIndex = tracksLeftToSend > 100 ? 100 : tracksLeftToSend;\n\t\tlet nextSetOfTracks = playlist.slice(startIndex, endIndex);\n\t\twhile (tracksLeftToSend) {\n\t\t\t// send nextSetOfTracks to playlistID\n\t\t\tawait this.addTracks(nextSetOfTracks, playlistID);\n\t\t\t// update tracksLeftToSend to see how many are left\n\t\t\ttracksLeftToSend = tracksLeftToSend - nextSetOfTracks.length;\n\t\t\t// update nextSetOfTracks to be the next set of tracks\n\t\t\tstartIndex = startIndex + nextSetOfTracks.length;\n\t\t\t// endIndex = endIndex + tracksLeftToSend;\n\t\t\tendIndex = tracksLeftToSend > 100 ? endIndex + 100 : endIndex + tracksLeftToSend;\n\t\t\tnextSetOfTracks = playlist.slice(startIndex, endIndex);\n\t\t}\n\t}\n\n\t// Format URIs for createPlaylist API call\n\tformatURIs(playlist) {\n\t\tconst formattedURI = playlist.map((track) => this.formatTrackID(track.id));\n\t\treturn formattedURI;\n\t}\n\n\t// Format the track ID to be used in formatURIs\n\tformatTrackID(trackID) {\n\t\treturn `spotify:track:${trackID}`;\n\t}\n\n\t// Fires API call to get next page of playlists (button is not rendered if there is no next) and add it to state\n\tasync findMorePlaylists() {\n\t\tthis.setState({ isLoadingNewPlaylist: true });\n\t\tconst playlistsResponse = await this.getPlaylists(this.state.isMorePlaylists);\n\t\tconst playlists = await this.extractPlaylists(playlistsResponse);\n\t\tthis.setState((currSt) => ({\n\t\t\tplaylists: [ ...currSt.playlists, ...playlists ],\n\t\t\tisLoadingNewPlaylist: false,\n\t\t\tisMorePlaylists: playlistsResponse.next\n\t\t}));\n\t}\n\n\t// Shuffle function taken from stackoverflow (look into this)\n\tshuffle(array) {\n\t\tvar currentIndex = array.length,\n\t\t\ttemporaryValue,\n\t\t\trandomIndex;\n\t\t// While there remain elements to shuffle...\n\t\twhile (0 !== currentIndex) {\n\t\t\t// Pick a remaining element...\n\t\t\trandomIndex = Math.floor(Math.random() * currentIndex);\n\t\t\tcurrentIndex -= 1;\n\t\t\t// And swap it with the current element.\n\t\t\ttemporaryValue = array[currentIndex];\n\t\t\tarray[currentIndex] = array[randomIndex];\n\t\t\tarray[randomIndex] = temporaryValue;\n\t\t}\n\t\treturn array;\n\t}\n\n\t// Extract hashParams so we can extract access_token\n\tgetHashParams() {\n\t\tvar hashParams = {};\n\t\tvar e,\n\t\t\tr = /([^&;=]+)=?([^&;]*)/g,\n\t\t\tq = window.location.hash.substring(1);\n\t\twhile ((e = r.exec(q))) {\n\t\t\thashParams[e[1]] = decodeURIComponent(e[2]);\n\t\t}\n\t\treturn hashParams;\n\t}\n\n\trender() {\n\t\tconst authorizeURL = `https://accounts.spotify.com/authorize?client_id=${this.props\n\t\t\t.clientID}&redirect_uri=${this.props.redirectURI}&scope=${this.props\n\t\t\t.scope}&show_dialog=true&response_type=token`;\n\n\t\tconst {\n\t\t\taccess_token,\n\t\t\tchosenPlaylists,\n\t\t\tisLoadingPlaylists,\n\t\t\tisLoadingNewPlaylist,\n\t\t\tplaylists,\n\t\t\tisMorePlaylists\n\t\t} = this.state;\n\t\treturn isLoadingPlaylists ? (\n\t\t\t<Loader />\n\t\t) : (\n\t\t\t<div className=\"App\">\n\t\t\t\t<Navbar authorizeURL={authorizeURL} accessToken={access_token} username={this.state.userData.id} />\n\t\t\t\t<div className=\"App-content-container\">\n\t\t\t\t\t<PlaylistBar\n\t\t\t\t\t\tchosenPlaylistIDs={chosenPlaylists.map((playlist) => playlist.id)}\n\t\t\t\t\t\taddPlaylist={this.addPlaylist}\n\t\t\t\t\t\tremovePlaylist={this.removePlaylist}\n\t\t\t\t\t\tisLoading={isLoadingNewPlaylist}\n\t\t\t\t\t\tplaylists={playlists}\n\t\t\t\t\t\tisMorePlaylists={isMorePlaylists}\n\t\t\t\t\t\tfindMorePlaylists={this.findMorePlaylists}\n\t\t\t\t\t/>\n\t\t\t\t\t<MixingBoard\n\t\t\t\t\t\tchosenPlaylists={chosenPlaylists}\n\t\t\t\t\t\tcreatePlaylist={this.createPlaylist}\n\t\t\t\t\t\tremovePlaylist={this.removePlaylist}\n\t\t\t\t\t\tonLevelChange={this.onLevelChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ErrorBoundary from './ErrorBoundary';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<ErrorBoundary>\n\t\t\t<App />\n\t\t</ErrorBoundary>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/spotify-icon-logo.11dc437a.png\";"],"sourceRoot":""}